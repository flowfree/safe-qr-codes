steps:

  ########## BACKEND ##########

  # Build the docker image
  - id: '[Backend] Build the Docker image'
    name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    args: 
      - 'build'
      - '-t'
      - '$LOCATION-docker.pkg.dev/$PROJECT_ID/${_ARTIFACTS_REPO}/backend'
      - '.'

  # Push the docker image to the Google Artifacts Registry
  - id: '[Backend] Push to Artifacts Registry'
    name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - '$LOCATION-docker.pkg.dev/$PROJECT_ID/${_ARTIFACTS_REPO}/backend'

  # Deploy to Google Cloud Run
  - id: '[Backend] Deploy to Cloud Run'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: 
      - 'gcloud'
      - 'run'
      - 'deploy'
      - '${_ARTIFACTS_REPO}-backend'
      - '--image=$LOCATION-docker.pkg.dev/$PROJECT_ID/${_ARTIFACTS_REPO}/backend'
      - '--platform=managed'
      - '--region=$LOCATION'
      - '--allow-unauthenticated'

  ########## FRONTEND ##########

  # Build the docker image
  - id: '[Frontend] Build the docker image'
    name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    args: 
      - 'build'
      - '-t'
      - '$LOCATION-docker.pkg.dev/$PROJECT_ID/${_ARTIFACTS_REPO}/frontend'
      - '.'

  # Push the docker image to the Google Artifacts Registry
  - id: '[Frontend] Push to Artifacts Registry'
    name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - '$LOCATION-docker.pkg.dev/$PROJECT_ID/${_ARTIFACTS_REPO}/frontend'

  # Deploy to Google Cloud Run
  - id: '[Frontend] Deploy to Cloud Run'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: 
      - 'gcloud'
      - 'run'
      - 'deploy'
      - '${_ARTIFACTS_REPO}-frontend'
      - '--image=$LOCATION-docker.pkg.dev/$PROJECT_ID/${_ARTIFACTS_REPO}/frontend'
      - '--platform=managed'
      - '--region=$LOCATION'
      - '--port=80'
      - '--allow-unauthenticated'

substitutions:
  _ARTIFACTS_REPO: 'safe-qr-codes'
